using UnityEngine.UI;
using UnityEngine;
using System.Collections;

[RequireComponent(typeof(Health))]
public class HealthConclusion : MonoBehaviour
{
    [SerializeField] private Text _healthText;
    [SerializeField] private Slider _healthSlider;
    [SerializeField] private Image _imageHealt;

    private float _fillSpeed = 0.1f;
    private float _targetFillAmount;

    private void OnEnable()
    {
        Health healthComponent = GetComponent<Health>();
        healthComponent.OnHealthChanged += HandleHealthChanged;
    }

    private void OnDisable()
    {
        Health healthComponent = GetComponent<Health>();
        healthComponent.OnHealthChanged -= HandleHealthChanged;
    }

    private void HandleHealthChanged(float currentHealth, float maxHealth)
    {
        _healthText.text = $"{currentHealth}/{maxHealth}";
        _healthSlider.value = currentHealth;
        _targetFillAmount = currentHealth / maxHealth;
        StartCoroutine(SmoothFillTransition());
    }

    private IEnumerator SmoothFillTransition()
    {
        while (!Mathf.Approximately(_imageHealt.fillAmount, _targetFillAmount))
        {
            _imageHealt.fillAmount = Mathf.MoveTowards(_imageHealt.fillAmount, _targetFillAmount, Time.deltaTime * _fillSpeed);
            yield return null;
        }
    }
}
